trigger:
- none 

pool: 
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: "Infra and Artifact Build Stage"
  jobs:
    - job: InfranArtifactBuild
      steps: 
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: 'latest'
      
      - task: TerraformTaskV2@2
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(build.sourcesdirectory)/env'
          backendServiceArm: 'Pay-As-You-Go(a355c32e-4a22-4b05-aab4-be236850fa6e)'
          backendAzureRmResourceGroupName: 'NextOps'
          backendAzureRmStorageAccountName: 'nextopstfsat20'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'terraform.tfstate'
      
      - task: TerraformTaskV2@2
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(build.sourcesdirectory)/env'
          commandOptions: '--auto-approve'
          environmentServiceNameAzureRM: 'Pay-As-You-Go(a355c32e-4a22-4b05-aab4-be236850fa6e)'
      
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '20.x'
      
      - script: |
          cd $(build.sourcesdirectory)
          npm install -g @angular/cli 
          npm install 
          ng build
        workingDirectory: '$(build.sourcesdirectory)'
      
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/dist/angular-conduit'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/spaweb.zip'
          replaceExistingArchive: true
      
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to Dev'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: ArtifactDeployment
      displayName: "Deploy to Dev"
      environment: 'DevWebApp'
      strategy:
        runOnce:
          deploy:
            steps: 
            - task: AzureWebApp@1
              inputs:
                azureSubscription: 'Pay-As-You-Go(a355c32e-4a22-4b05-aab4-be236850fa6e)'
                appType: 'webAppLinux'
                appName: 'nextopsmywa01'
                package: '$(pipeline.workspace)/drop/spaweb.zip'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'pm2 serve /home/site/wwwroot/browser --no-daemon --spa'